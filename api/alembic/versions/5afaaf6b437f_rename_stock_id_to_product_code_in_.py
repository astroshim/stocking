"""rename stock_id to product_code in watchlist

Revision ID: 5afaaf6b437f
Revises: d5ba8f4db345
Create Date: 2025-09-01 15:19:14.196245

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '5afaaf6b437f'
down_revision: Union[str, Sequence[str], None] = 'd5ba8f4db345'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 기존 데이터를 유지하면서 컬럼명 변경
    
    # 1. product_code 컬럼이 이미 존재하는지 확인하고, 없으면 추가
    from sqlalchemy import inspect
    bind = op.get_bind()
    inspector = inspect(bind)
    columns = [col['name'] for col in inspector.get_columns('watch_lists')]
    
    if 'product_code' not in columns:
        op.add_column('watch_lists', sa.Column('product_code', sa.String(length=20), nullable=True, comment='상품 코드 (주식, 코인 등 - 예: 097230, BTC-KRW)'))
    
    # 2. stock_id 데이터를 product_code로 복사 (product_code가 NULL인 경우만)
    op.execute("UPDATE watch_lists SET product_code = stock_id WHERE product_code IS NULL")
    
    # 3. product_code를 NOT NULL로 변경
    op.alter_column('watch_lists', 'product_code', 
                    existing_type=sa.String(length=20),
                    nullable=False)
    
    # 4. stock_id 컬럼이 존재하면 삭제
    if 'stock_id' in columns:
        op.drop_column('watch_lists', 'stock_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 롤백 시에도 데이터 유지
    
    # 1. 현재 테이블 상태 확인
    from sqlalchemy import inspect
    bind = op.get_bind()
    inspector = inspect(bind)
    columns = [col['name'] for col in inspector.get_columns('watch_lists')]
    
    # 2. stock_id 컬럼이 없으면 추가 (nullable=True로 먼저 생성)
    if 'stock_id' not in columns:
        op.add_column('watch_lists', sa.Column('stock_id', mysql.VARCHAR(collation='utf8mb3_unicode_ci', length=20), nullable=True, comment='주식 종목 코드 (예: 097230)'))
    
    # 3. product_code 데이터를 stock_id로 복사 (stock_id가 NULL인 경우만)
    op.execute("UPDATE watch_lists SET stock_id = product_code WHERE stock_id IS NULL")
    
    # 4. stock_id를 NOT NULL로 변경  
    op.alter_column('watch_lists', 'stock_id', 
                    existing_type=mysql.VARCHAR(collation='utf8mb3_unicode_ci', length=20),
                    nullable=False)
    
    # 5. product_code 컬럼이 존재하면 삭제
    if 'product_code' in columns:
        op.drop_column('watch_lists', 'product_code')
    # ### end Alembic commands ###
