AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Bastion Host for private network access, references existing network stack

Parameters:
  NetworkStackName:
    Type: String
    Default: network-infrastructure
    Description: Name of the network infrastructure stack to reference
  
  InstanceType:
    Type: String
    Default: t3.micro
    Description: EC2 instance type for the Bastion host
  
  KeyPairName:
    Type: String
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
  
  YourIpAddress:
    Type: String
    Description: Your IP address for SSH access (e.g. 123.123.123.123/32)
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})(\/\d{1,2})
  
  SSHPort:
    Type: Number
    Default: 22
    Description: SSH port for Bastion host

Resources:
  # Bastion 보안 그룹
  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Bastion Host
      VpcId:
        Fn::ImportValue: !Sub ${NetworkStackName}-VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: !Ref SSHPort
          ToPort: !Ref SSHPort
          CidrIp: !Ref YourIpAddress
      Tags:
        - Key: Name
          Value: bastion-sg
  
  # Bastion 인스턴스 IAM 역할
  BastionInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Path: /
  
  # IAM 인스턴스 프로파일
  BastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref BastionInstanceRole
  
  # Bastion 호스트 인스턴스
  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      KeyName: !Ref KeyPairName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: '0'
          GroupSet: [!Ref BastionSecurityGroup]
          SubnetId:
            Fn::ImportValue: !Sub ${NetworkStackName}-PublicSubnet1Id
      IamInstanceProfile: !Ref BastionInstanceProfile
      Tags:
        - Key: Name
          Value: bastion-host
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install -y epel
          yum install -y htop tmux jq
          # SSH 포트 변경 (기본값 22가 아닌 경우)
          if [ "${SSHPort}" -ne 22 ]; then
            sed -i "s/#Port 22/Port ${SSHPort}/g" /etc/ssh/sshd_config
            systemctl restart sshd
          fi

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0cff7528ff583bf9a  # Amazon Linux 2 AMI in us-east-1
    us-east-2:
      AMI: ami-0ebc8f6f580a04647  # Amazon Linux 2 AMI in us-east-2
    us-west-1:
      AMI: ami-008d8ed4bd7dc2485  # Amazon Linux 2 AMI in us-west-1
    us-west-2:
      AMI: ami-006dcf34c09e50022  # Amazon Linux 2 AMI in us-west-2
    ap-northeast-1:
      AMI: ami-07dd14faa8a17fb3e  # Amazon Linux 2 AMI in ap-northeast-1
    ap-northeast-2:
      AMI: ami-0fd0765afb77bcca7  # Amazon Linux 2 AMI in ap-northeast-2
    ap-southeast-1:
      AMI: ami-0b89f7b3f054b957e  # Amazon Linux 2 AMI in ap-southeast-1
    ap-southeast-2:
      AMI: ami-075a72b1992cb0687  # Amazon Linux 2 AMI in ap-southeast-2
    eu-west-1:
      AMI: ami-0ea0f26a6d50850c5  # Amazon Linux 2 AMI in eu-west-1

Outputs:
  BastionIP:
    Description: Public IP of Bastion Host
    Value: !GetAtt BastionHost.PublicIp
  
  SSHCommand:
    Description: Command to SSH into Bastion Host
    Value: !Sub "ssh -i /path/to/${KeyPairName}.pem ec2-user@${BastionHost.PublicIp} -p ${SSHPort}"
  
  SecurityGroupId:
    Description: Security Group ID of Bastion Host
    Value: !Ref BastionSecurityGroup
  
  BastionHostId:
    Description: EC2 Instance ID of Bastion Host
    Value: !Ref BastionHost
